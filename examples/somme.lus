node half_add(a,b:bool) returns (s, co:bool);
let s = a xor b;
  co = a and b;
tel;

node full_add(a,b,c:bool) returns (s, co:bool);
var s1,c1,c2:bool;
let
  (s1, c1) = half_add(a,b);
  (s, c2) = half_add(c, s1);
  co = c1 or c2;
tel;

node somme(a,b: bool) returns (v: bool);
var carry: bool;
let
  (v, carry) = full_add(a, b, false fby carry);
tel
  
node check(a:bool) returns (ok: bool);
let
  ok = (somme(a,a)) = (false fby a);
tel
